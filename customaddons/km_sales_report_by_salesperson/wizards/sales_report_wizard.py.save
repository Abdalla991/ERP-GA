from odoo import models, fields, api, _




class SalesReportBySalesperson(models.TransientModel):
    _name = 'sale.salesperson.report'

    # sales_person = fields.Many2one('res.users',string='Salesperson')
    

    start_date = fields.Datetime(string="Start Date", required=True)
    end_date = fields.Datetime(string="End Date", required=True)
    salesperson_ids = fields.Many2many('res.users', string="Salesperson", required=True,domain="[('sale_order_count','!=',0)]")

    def print_sale_report_by_salesperson(self):
        sales_order = self.env['sale.order'].search([])
        sale_order_groupby_dict = {}
        for salesperson in self.salesperson_ids:
            filtered_sale_order = list(filter(lambda x: x.user_id == salesperson, sales_order))
            print('filtered_sale_order ===',filtered_sale_order)
            filtered_by_date = list(filter(lambda x: x.date_order >= self.start_date and x.date_order <= self.end_date, filtered_sale_order))
            sale_order_groupby_dict[salesperson.name] = filtered_by_date

        final_dist = {}
        for salesperson in sale_order_groupby_dict.keys():

            sale_data = []
            total_annual_target_commission = 0
            total_amount_untaxed = 0
            temp_data2 = []
            for order in sale_order_groupby_dict[salesperson]:
                temp_data = []

                commission = order.amount_untaxed * (order.commission_ratio / 100)
                invoices = order.order_line.invoice_lines.move_id.filtered(lambda r: r.type in ('out_invoice', 'out_refund'))
                total_paid = 0
                for invoice in invoices:
                    if invoice.invoice_payment_state == 'paid':
                        total_paid += invoice.amount_untaxed
                if total_paid != order.amount_untaxed:
                    commission = 0


                total_annual_target_commission += order.amount_untaxed * (order.annual_target_commission / 100)
                total_amount_untaxed += order.amount_untaxed
                if total_amount_untaxed < order.annual_target:
                    successful_commission = 0
                else:
                    successful_commission = total_annual_target_commission
                         
                temp_data.append(order.name)
                temp_data.append(order.date_order)
                temp_data.append(order.partner_id.name)
                temp_data.append(order.amount_untaxed)
                temp_data.append(commission)
                temp_data.append(0)
                sale_data.append(temp_data)

            
            temp_data2.append(0)
            temp_data2.append(0)
            temp_data2.append(0)
            temp_data2.append(0)
            temp_data2.append(0)
            temp_data2.append(successful_commission)
            sale_data.append(temp_data2)
            final_dist[salesperson] = sale_data
        datas = {
            'ids': self,
            'model': 'sale.salesperson.report',
            'form': final_dist,
            'start_date': self.start_date,
            'end_date': self.end_date
        }
        return self.env.ref('km_sales_report_by_salesperson.action_report_by_salesperson').report_action([], data=datas)
